<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	<!-- 
	<debug />
	 -->
	 
	<!-- 不要过滤图片等静态资源 -->
	<http pattern="/webcontent/birt/**" security="none" />
	<http pattern="/**/*.jpg" security="none" />
	<http pattern="/**/*.png" security="none" />
	<http pattern="/**/*.gif" security="none" />
	<http pattern="/**/*.css" security="none" />
	<http pattern="/**/*.js" security="none" />
	<!-- 登录页面和忘记密码页面不过滤  -->
	<http pattern="/login" security="none" />
	<http pattern="/jsp/forgotpassword.jsp" security="none" />

	<http use-expressions="true" entry-point-ref="authenticationEntryPoint" access-denied-page="/static/common/accessDenied.html">
		<!-- test -->
		<intercept-url pattern="/test/a" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/test/b" access="hasRole('ROLE_MANAGER')" />
		<intercept-url pattern="/test/c" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/**" access="isAuthenticated()" />
		<!-- 会话管理 -->
        <session-management invalid-session-url="/static/common/timeout.html">
            <concurrency-control max-sessions="10" error-if-maximum-exceeded="true" />
        </session-management>
		<!-- 增加一个filter，这点与Acegi是不一样的，不能修改默认的filter了，这个filter位于FILTER_SECURITY_INTERCEPTOR之前 -->
		<custom-filter ref="securityFilter" before="FILTER_SECURITY_INTERCEPTOR" />
		<!-- 登录过滤器 -->
		<custom-filter ref="loginFilter" before="FORM_LOGIN_FILTER" />
		<!-- 注销过滤器 -->
		<custom-filter ref="logoutFilter" before="LOGOUT_FILTER" />  
	</http>
	
	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性， 
		我们的所有控制将在这三个类中实现，解释详见具体配置 -->
    <beans:bean id="securityFilter" class="com.chinadrtv.erp.report.security.SimpleFilterSecurityInterceptor">
        <beans:property name="authenticationManager" ref="authenticationManager" />
        <beans:property name="accessDecisionManager" ref="simpleAccessDecisionManager" />
    </beans:bean>
	
	<!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="simpleUserDetailsService">
			<!-- 
			<password-encoder hash="md5" />
			 -->
		</authentication-provider>
	</authentication-manager>
	
	<!-- 未登录的切入点 -->
    <beans:bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:property name="loginFormUrl" value="/login"></beans:property>
    </beans:bean>
	
	<beans:bean id="loginFilter" class="com.chinadrtv.erp.report.security.SimpleUsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager"/>
		<beans:property name="authenticationFailureHandler" ref="failureHandler"/>
		<beans:property name="authenticationSuccessHandler" ref="successHandler"/>
		<beans:property name="usernameParameter" value="username"/>
		<beans:property name="passwordParameter" value="password"/>
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check"/>
	</beans:bean>
	
	<beans:bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/login?error=1" />
	</beans:bean>
	
	<beans:bean id="successHandler" class="com.chinadrtv.erp.report.security.ReportSimpleUrlAuthenticationSuccessHandler">
		<beans:property name="alwaysUseDefaultTargetUrl" value="true"/>
		<beans:property name="defaultTargetUrl" value="/home"/>
	</beans:bean>
	
	<!-- 注销过滤器，完成前台用户注销时的定向功能 -->  
    <beans:bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">  
        <beans:constructor-arg value="/login" />  
        <beans:constructor-arg>  
            <beans:list>  
                <beans:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />  
            </beans:list>  
        </beans:constructor-arg>  
        <beans:property name="filterProcessesUrl" value="/j_spring_security_logout" />  
    </beans:bean>  
  
</beans:beans>
