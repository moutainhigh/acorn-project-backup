<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">
    <!-- For mail settings and future properties files -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:system.properties</value>
                <value>classpath:source.properties</value>
                <value>classpath:schema.properties</value>
            </list>
        </property>
    </bean>

    <!-- JNDI DataSource for J2EE environments -->
    <!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/promotions"/>-->
<!--  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="100"/>
        <property name="maxWait" value="1000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="defaultAutoCommit" value="true"/>
        <property name="validationQuery" value="SELECT COUNT(*) FROM DUAL"/>
        <property name="testOnBorrow" value="true"/>
    </bean>
-->

    <bean id="wmsDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="${wmsJndiName}"/>
        <property name="resourceRef" value="true"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName" value="${omsJndiName}" />
      <property name="resourceRef" value="true"/>
   </bean>

    <bean id="mktDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="${mktJndiName}" />
        <property name="resourceRef" value="true"/>
    </bean>
   
   <bean id="dataSourceSms" class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName" value="${smsJndiName}" />
      <property name="resourceRef" value="true"/>
   </bean>

   <bean id="cntrpbankDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName" value="${ctbJndiName}" />
      <property name="resourceRef" value="true"/>
   </bean>
    <!--
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean id="jsonConverter"
                      class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes" value="text/html;charset=UTF-8" />
                </bean>
            </list>
        </property>
    </bean>
    -->
    
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>


	
	<bean id="jdbcTemplateSms" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSourceSms"/>
	</bean>

	<bean id="jdbcTemplateAgent" class="org.springframework.jdbc.core.JdbcTemplate">
    	<property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="dataSourceCti" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="${mktJndiName}" />
        <property name="resourceRef" value="true"/>
    </bean>

    <bean id="jdbcTemplateCti" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSourceCti"/>
    </bean>


    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean id="messageConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                    <property name="marshaller" ref="xstreamMarshaller" />
                    <property name="unmarshaller" ref="xstreamMarshaller" />
                </bean>
                <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
                <bean class = "org.springframework.http.converter.StringHttpMessageConverter">
                    <property name = "supportedMediaTypes">
                        <list><value>text/plain;charset=UTF-8</value></list>
                    </property>
                </bean>
                <bean id="jsonConverter"
                      class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes" value="application/json" />
                </bean>
            </list>
        </property>
    </bean>

    <bean id="xstreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
        <property name="aliases">
            <props>
                <prop key="channle">com.chinadrtv.erp.smsapi.dto.Channel</prop>
                <prop key="reply">com.chinadrtv.erp.smsapi.dto.Reply</prop>
                <prop key="sendResponse">com.chinadrtv.erp.smsapi.dto.SingleSendResponse</prop>
                <prop key="feedBack">com.chinadrtv.erp.smsapi.dto.FeedBack</prop>
                <prop key="sla">com.chinadrtv.erp.smsapi.dto.SendSla</prop>
                <prop key="timeScope">com.chinadrtv.erp.smsapi.dto.TimeScope</prop>
                <prop key="variable">com.chinadrtv.erp.smsapi.dto.Variables</prop>
                <prop key="message">com.chinadrtv.erp.smsapi.dto.Message</prop>
                <prop key="dateScope">com.chinadrtv.erp.smsapi.dto.DateScope</prop>
                <prop key="content">com.chinadrtv.erp.smsapi.dto.Content</prop>
                <prop key="reponse">com.chinadrtv.erp.smsapi.dto.Response</prop>
                <prop key="sendRequest">com.chinadrtv.erp.smsapi.dto.SendRequest</prop>
            </props>
        </property>

    </bean>

	<bean id="messageSource"
	   class="org.springframework.context.support.ResourceBundleMessageSource">
	   <property name="basenames">
	    <list>
	     <value>messages</value>
	    </list>
	   </property>
	</bean>

    <bean id="ctiDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${cti.jdbc.driverClassName}"/>
        <property name="url" value="${cti.jdbc.url}"/>
        <property name="username" value="${cti.jdbc.username}"/>
        <property name="password" value="${cti.jdbc.password}"/>
        <property name="maxActive" value="100"/>
        <property name="maxWait" value="1000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="defaultAutoCommit" value="true"/>
        <property name="validationQuery" value="SELECT COUNT(*) FROM DUAL"/>
        <property name="testOnBorrow" value="true"/>
    </bean>


    <bean id="ctiJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="ctiDataSource"/>
    </bean>
    
    <bean id="appValidationResource" class="com.chinadrtv.erp.util.AppValidationResource" lazy-init="false">
    	<property name="validationQuery" value="SELECT COUNT(*) FROM DUAL"/>
    	<property name="dbs">
    		<list>
    			<value>dataSource</value>
    			<value>cntrpbankDataSource</value>
    			<value>ctiDataSource</value>
    		</list>
    	</property>
    	<property name="files">
    		<list>
    		</list>
    	</property>
    	<property name="https">
    		<list>
    		</list>
    	</property>
	</bean>
	
</beans>
