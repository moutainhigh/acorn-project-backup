<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:aop="http://www.springframework.org/schema/aop"
           xmlns:context="http://www.springframework.org/schema/context"
           xmlns:tx="http://www.springframework.org/schema/tx"
           xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
           default-lazy-init="true">


    
    <!-- Enable @Transactional support -->
    <tx:annotation-driven/>
    
    <!-- Enable @AspectJ support -->
    <aop:aspectj-autoproxy/>

    <!-- Activates scanning of @Autowired -->
    <context:annotation-config/>
    
    <!-- Activates scanning of @service -->
    <context:component-scan base-package="com.chinadrtv.erp">
        <context:exclude-filter type="regex" expression="com.chinadrtv.erp.marketing.core.service.*"/>
        <context:exclude-filter type="regex" expression="com.chinadrtv.erp.user.*"/>
    </context:component-scan>
    
    <tx:advice id="txAdvice">
        <tx:attributes>
            <!-- Read-only commented out to make things easier for end-users -->
            <tx:method name="build*" read-only="true" propagation="REQUIRED" rollback-for="Throwable"/>
            <tx:method name="get*" read-only="true" propagation="REQUIRED" rollback-for="Throwable"/>
            <tx:method name="calculate*" read-only="true" propagation="REQUIRED" rollback-for="Throwable"/>
            <tx:method name="*" propagation="REQUIRED" rollback-for="Throwable"/>
        </tx:attributes>
    </tx:advice>

    <!-- =================================================================== -->
    <!-- AOP: Configuration and Aspects                                      -->
    <!-- =================================================================== -->
    <aop:config>
        <aop:advisor id="managerTx" advice-ref="txAdvice" pointcut="execution(* *..service.*Service.*(..))" order="0"/>
    </aop:config>

    <!-- =================================================================== -->
    <!-- Security class from Spring Security - used to configure Password    -->
    <!-- Encryption in UserManagerImpl. Can override in security.xml.        -->
    <!-- =================================================================== -->
    <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.PlaintextPasswordEncoder"/>

    <import resource="classpath*:simplesm-context.xml" />

    <bean class="com.google.code.ssm.Settings">
        <property name="order" value="500" />
    </bean>

    <bean name="cacheManager" class="com.google.code.ssm.spring.SSMCacheManager">
        <property name="caches">
            <set>
                <bean name="firstCache" id="firstCache" class="com.google.code.ssm.spring.SSMCache">
                    <constructor-arg name="cache" index="0" ref="defaultCache" />
                    <constructor-arg name="expiration" index="1" value="300" />
                    <constructor-arg name="allowClear" index="2" value="false" />
                </bean>
            </set>
        </property>
    </bean>
    
    <bean name="defaultCache" class="com.google.code.ssm.CacheFactory">
        <property name="cacheName" value="default" />
        <property name="cacheClientFactory">
            <bean name="cacheClientFactory" class="com.google.code.ssm.providers.spymemcached.MemcacheClientFactoryImpl" />
        </property>
        <property name="addressProvider">
            <bean class="com.google.code.ssm.config.DefaultAddressProvider">
                <property name="address" value="${MEMCACHE_SERVER}" />
            </bean>
        </property>
        <property name="configuration">
            <bean class="com.google.code.ssm.providers.CacheConfiguration">
                <property name="consistentHashing" value="true" />
            </bean>
        </property>
    </bean>


</beans>
