 <beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:amq="http://activemq.apache.org/schema/core"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-2.5.xsd  
http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd">
    
		<!-- 使用spring的listenerContainer，消息用持久化保存，服务器重启不会丢失 -->
	<!-- embedded ActiveMQ Broker -->
	<amq:broker useJmx="true"  persistent="false" start="true">
		<amq:persistenceAdapter>
			<amq:amqPersistenceAdapter directory="${mq_data_directory}"/>
		</amq:persistenceAdapter>
		<amq:managementContext>
        <amq:managementContext connectorPort="1100" jmxDomainName="org.apache.activemq"/>
    	</amq:managementContext>
		<amq:transportConnectors>
			<amq:transportConnector uri="${mq_server}" />  
		</amq:transportConnectors>
	</amq:broker>


    
        <bean id="jmsConnectionFactory"
        class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${mq_server}"></property>
    </bean>
    
	<!-- 使用Queue方式 -->
	<amq:queue name="QUEUE-MAIN" physicalName="JMS-QUEUE-MAIN" />

	<!-- Spring JmsTemplate config -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory">
			<!-- lets wrap in a pool to avoid creating a connection per send -->
			<bean class="org.springframework.jms.connection.SingleConnectionFactory">
				<property name="targetConnectionFactory" ref="jmsConnectionFactory" />
			</bean>
		</property>
		<property name="messageConverter" ref="defaultMessageConverter" />
		 <!-- 区别它采用的模式为false是p2p为true是订阅 --> 
		<property name="pubSubDomain" value="false" />
		<property name="receiveTimeout"  value="600"/>
	</bean>
  <bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">  
        <constructor-arg value="cm.queue"></constructor-arg>  
    </bean>  
	<!-- converter -->
	<bean id="defaultMessageConverter" class="com.chinadrtv.erp.sms.jms.DefaultMessageConverter" />

	<!-- POJO which send Message uses Spring JmsTemplate -->
	<bean id="queueMessageProducer" class="com.chinadrtv.erp.sms.jms.QueueMessageProducer">
		<property name="template" ref="jmsTemplate" />
		<property name="destination" ref="queueDestination" />
	</bean>
	<!-- Message Driven POJO (MDP) -->
	<!-- consumer for queue -->
	<bean id="queueConsumer" class="com.chinadrtv.erp.sms.jms.QueueConsumer">
		<property name="template" ref="jmsTemplate" />
	</bean>
	
	<!-- Message Listener for -->
	<bean id="queueListener"
		class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<constructor-arg ref="queueConsumer" />
		<property name="defaultListenerMethod" value="onMessage" />
		<property name="messageConverter" ref="defaultMessageConverter" />
	</bean>
	<!-- listener container，MDP无需实现接口 -->
	<bean id="queueListenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer" >
		<property name="connectionFactory" ref="jmsConnectionFactory" />
		<property name="destination" ref="queueDestination" />
		<property name="messageListener" ref="queueListener" />
		 <property name="concurrentConsumers" value="1" />  
	</bean>

</beans>