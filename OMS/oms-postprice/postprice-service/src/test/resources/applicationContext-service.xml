<?xml version="1.0" encoding="UTF-8"?>

<!-- Application context definition. -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
       default-autowire="byName">
    <bean id="iagentDataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
        <property name="url" value="jdbc:oracle:thin:@192.168.4.10:1521:testdb"></property>
        <property name="username" value="acoapp_oms"></property>
        <property name="password" value="oms.2012"></property>
    </bean>

    <bean id="wmsDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="url"><value>jdbc:sqlserver://192.168.3.106:1433;DatabaseName=ILS</value></property>
        <property name="driverClassName"><value>com.microsoft.sqlserver.jdbc.SQLServerDriver</value></property>
        <property name="username"><value>manh</value></property>
        <property name="password"><value>wmssys.2013</value></property>
    </bean>

    <!-- Mybatis session factory -->
    <bean id="wmsSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          lazy-init="false">
        <property name="dataSource" ref="wmsDataSource"/>
        <!-- <property name="mapperLocations" value="classpath:sqlmapper/*Mapper.xml"/>-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="plugins">
            <list>
                <bean class="com.chinadrtv.common.log.LogInterceptor"/>
                <bean class="com.chinadrtv.common.pagination.PaginationInterceptor">
                    <property name="dialect">
                        <bean class="com.chinadrtv.common.pagination.OracleDialect"/>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="wmsSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="wmsSessionFactory"/>
    </bean>


    <bean id="wmsMapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.chinadrtv.postprice.dal.wms.dao" />
        <property name="sqlSessionTemplateBeanName" value="wmsSession"/>
    </bean>

    <bean id="wmsTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="wmsDataSource" />
    </bean>


    <!-- Mybatis session factory -->
    <bean id="iagentSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          lazy-init="false">
        <property name="dataSource" ref="iagentDataSource"/>
        <!-- <property name="mapperLocations" value="classpath:sqlmapper/*Mapper.xml"/>-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="plugins">
            <list>
                <bean class="com.chinadrtv.common.log.LogInterceptor"/>
                <bean class="com.chinadrtv.common.pagination.PaginationInterceptor">
                    <property name="dialect">
                        <bean class="com.chinadrtv.common.pagination.OracleDialect"/>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="iagentSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="iagentSessionFactory"/>
        <constructor-arg index="1" value="BATCH"/>
    </bean>


    <bean id="iagentMapperScanner"  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.chinadrtv.postprice.dal.iagent.dao" />
        <property name="sqlSessionTemplateBeanName" value="iagentSession"/>
    </bean>

    <bean id="iagentTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="iagentDataSource" />
    </bean>


    <tx:advice id="txAdviceWms" transaction-manager="wmsTransactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" rollback-for="Throwable"/>
        </tx:attributes>
    </tx:advice>

    <tx:advice id="txAdviceIagent" transaction-manager="iagentTransactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" rollback-for="Throwable"/>
        </tx:attributes>
    </tx:advice>

    <aop:aspectj-autoproxy/>

    <aop:config>
        <aop:advisor id="managerTxWms" advice-ref="txAdviceWms" pointcut="execution(* *..service.*Service.*(..))" order="0"/>
        <aop:advisor id="managerTxIagent" advice-ref="txAdviceIagent" pointcut="execution(* *..service.*Service.*(..))" order="0"/>
    </aop:config>

    <tx:annotation-driven/>

    <context:component-scan base-package="com.chinadrtv.postprice.iagent.service;com.chinadrtv.postprice.wms.service;com.chinadrtv.postprice.dal"/>

    <bean id="propertyConfigurerMessage" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:env.properties</value>
            </list>
        </property>
    </bean>
</beans>